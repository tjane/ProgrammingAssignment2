a <- available.package()
a <- available.packages()
head(rownames(a),10)
find.package("devtools")
install.packages("devtools")
find.package("devtools")
find_rtools()
load("devtools")
library("devtools")
find_rtools()
mkdir data
mkdir ../data
mkdir data
cd ..
find.package("stats")
find.package("KernSmooth")
library()
installed.packages()[,c("Package","Version")]
installed.packages()
package.description("KernSmooth")
version("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
x <- rnorm(10,-5,0.1)
x
y <- rnorm(10,5,2)
X<- cbind(x,y)
X
apply(X,2,mean)
apply(X,2,sd)
forms <- list(y~x,y~poly(x,2))
forms
lapply(forms,lm)
layout(matrix(1:3,3,1))
data <- read.table("Swal.dat")
data(InsectSprays)
aov.spary <-aov(sqrt(count)~spray,data = InsectSprays)
View(InsectSprays)
View(X)
aov.spray
aov.spary
opar <- par()
par(mfcol = c(2,2)
)
plot(aov.spary)
plot(aov.spary)
par(mfcol = c(2,2))
plot(aov.spary)
x <- 8;y<-6
n <- 10; m <- 10
B <- 10000
p1 <- rbeta(B,x + 1, n - x + 1)
p2 <- rbeta(B,y + 1, n - y + 1)
delta <- p2 - p1
print(mean(delta))
left <- quantile(delta,.025)
right <- quantile(delta,.975)
print(c(left,right))
quantile?
#
?
1
x <- 8;y<-6
> n <- 10; m <- 10
> B <- 100000
> p1 <- rbeta(B,x + 1, n - x + 1)
> p2 <- rbeta(B,y + 1, n - y + 1)
> delta <- p2 - p1
> print(mean(delta))
x <- 8;y<-6
n <- 10; m <- 10
B <- 100000
p1 <- rbeta(B,x + 1, n - x + 1)
p2 <- rbeta(B,y + 1, n - y + 1)
delta <- p2 - p1
print(mean(delta))
n <- rep(15,10)
B <- 10000
p <- matrix(0,B,10)
check <- rep(0,B)
for(i in 1:10){
p[,i] <- rbeta(B,y[i]+1,n[i]-y[i]+1)
}
for(i in 1:B){
check[i]<-min(diff(p[i,]))
}
good <- (1:B)[check >= 0]
p <- p[good,]
B <- nrow(p)
delta <- rep(0,B)
for(i in 1:B){
temp <- cumsum(p[i,])
j <- (1:10)[temp > .5]
j <- min(j)
delta[i] <- x[j]
}
print(mean(delta))
left <- quantile(delta,.025)
right <- quantile(delta,.975)
print(c(left,right))
n <- rep(15,10)
B <- 10000
p <- matrix(0,B,10)
check <- rep(0,B)
for(i in 1:10){
p[,i] <- rbeta(B,y[i]+1,n[i]-y[i]+1)
}
for(i in 1:B){
check[i]<-min(diff(p[i,]))
}
good <- (1:B)[check >= 0]
p <- p[good,]
B <- nrow(p)
delta <- rep(0,B)
for(i in 1:B){
temp <- cumsum(p[i,])
j <- (1:10)[temp > .5]
j <- min(j)
delta[i] <- x[j]
}
print(mean(delta))
left <- quantile(delta,.025)
right <- quantile(delta,.975)
print(c(left,right))
x <- list(a = 1:4, b = rnorm(10),c = rnorm(20,1),d = rnorm(100,5))
lapply(x,mean)
x <- 1:4
lapply(x,runif)
x <- 1:4
lapply(x,runif,min = 0, max = 10)
x <- list(a = matrix(1:4,2,2),b = matrix(1:6,3,2))
x
lapply(x,function(elt),elt[,1])
lapply(x,function(elt),elt[ ,1])
x <- list(a = 1:4, b = rnorm(10),c = rnorm(20,1),d = rnorm(100,5))
sapply(x,mean)
x <- matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x,1,sum)
apply(x,1,quantile,probs = c(0.25,0.75))
a <- array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims = 2)
library(datasets)
data(iris)
?iris
names(iris)
lapply(iris,mean)
?lapply
head(iris)
values(iris$species)
iris$species
iris$Species
choose <- iris$Species = virginica
choose <- iris$Species = "virginica"
choose <- (iris$Species = "virginica")
choose
class(iris$Species)
x <- c(1,1,2,1,1,0)
x = 1
a <- (x = 1)
a
pwd
getwd()
apply(iris[,1:4,1,mean])
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
library(datasets)
data(mtcars)
names(mtcars)
library(datasets)
data(mtcars)
?mtcars
lapply(split(mtcars$hp,mtcars$cyl),mean)
x <-lapply(split(mtcars$hp,mtcars$cyl),mean)
abs(x[1]-x[3])
x
class(x)
x(1)
x
x['4']
abs(x['4']-x['8'])
x['4'][1]
names(x)
class(x["4"])
class(x['4'])
x['4',1]
abs(209.2143-82.63636)
getwd()
cd C:\Users\a\ProgrammingAssignment2
cd “C:\Users\a\ProgrammingAssignment2”
setwd("C:\Users\a\ProgrammingAssignment2")
setwd("C:/Users/a/ProgrammingAssignment2")
